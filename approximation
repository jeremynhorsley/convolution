% Approximation(computed convolution)
clf
delta = 0.01;
t = 0:delta:5;
x = u(t) - u(t-1);
h = u(t) - u(t-2);
y = delta * conv(x, h);
tt = 0:delta:10; % note: it’s twice as long as ‘t’
plot(tt, y, 'LineWidth', 2);
xlim([0 5])
hold on;
% Theoretical convolution
delta2 = 0.1;
t = 0:delta2:5;
y2 = t.*u(t)+(1-t).*u(t-1)+(2-t).*u(t-2)+(t-3).*u(t-3);
plot(t, y2, 'ro', 'MarkerFaceColor', 'r');
axis([0 5 0 1.1]);
legend('Approximation', 'Theoretical');
% Approximation(computed convolution)
figure(2)
delta = 0.01;
t = -2:delta:6;
x = u(t+1) + u(t) - 2*u(t-1);
h = u(t) - 2*u(t-1) + u(t-2);
y = delta * conv(x, h);
tt = -4:delta:12; 
plot(tt, y, 'LineWidth', 2);
xlim([-2 6])
hold on;
% Theoretical convolution
delta2 = 0.2;
t = -2:delta2:6;
y2 = (t+1).*u(t+1)-t.*u(t)+(1-t).*u(t-1)+(-2*t+2).*(u(t-1)-u(t-2))+(t-2).*
plot(t, y2, 'ro', 'MarkerFaceColor', 'r');
axis([-2 6 -2 6]);
legend('Approximation', 'Theoretical');
grid on;
% Approximation(computed convolution)
figure(3)
ENGR 315 - Lab 4
2
delta = 0.01;
t = -2:delta:6;
x = sin(2*pi*t).*u(t) - sin(2*pi*t-3).*u(t-3);
h = u(t) - u(t-3);
y = delta * conv(x, h);
tt = -4:delta:12; 
plot(tt, y, 'LineWidth', 2);
xlim([-2 6])
hold on;
% Theoretical convolution
delta2 = 0.2;
t = -2:delta2:6;
y2 = (.15*sin((2*pi)*t-1.25)+.15).*u(t);
plot(t, y2, 'ro', 'MarkerFaceColor', 'r');
xlim([-2 6])
axis([-2 6 -.5 .5]);
grid on;
% Approximation(computed convolution)
figure(4)
delta = 0.01;
t = -2:delta:6;
x = exp(-t) .*u(t);
h = u(t-1) - u(t-3);
y = delta * conv(x, h);
tt = -4:delta:12; 
plot(tt, y, 'LineWidth', 2);
xlim([0 5])
hold on;
% Theoretical convolution
delta2 = 0.2;
t = -2:delta2:6;
y2 = (1-exp(1-t)).*u(t-1) - (1-exp(3-t)).*u(t-3);
plot(t, y2, 'ro', 'MarkerFaceColor', 'r');
xlim([-2 6])
axis([-2 6 -1 1]);
grid on;
%Commutative Property
% x*h = h*x
figure(5);
delta = 0.01;
t = -2:delta:6;
tt = -4:delta:12;
x = 2.*(u(t)-u(t-2));
h = u(t)-u(t-1);
y = delta*conv(x, h); 
y2 = delta*conv(h, x); 
plot(tt,y,'LineWidth',4);
xlim([-2 6])
hold on;
plot(tt,y2,'r:', 'LineWidth', 6);
xlim([-2 6])
legend('x*h', 'h*x');
ENGR 315 - Lab 4
3
title('Commutative Property of Convolution');
axis([-2 6 -.5 2.2])
grid on;
%Associative Property
%(x*h1)*h2 = x*(h1*h2)
figure(6);
delta = .01;
t = -2:delta:6;
tx = -8:delta:16; 
x = (u(t)-u(t-1));
h1 = u(t)-(2.*u(t-2))+u(t-3);
h2 = u(t+1)+u(t-1)-(2.*(t-2));
a = delta*conv(x, h1);
y = delta*conv(a, h2);
plot(tx, y,'LineWidth',4);
xlim([-2 6])
hold on;
b = delta*conv(h1, h2);
y2 = delta*conv(b, x);
plot(tx,y2,'r:', 'LineWidth', 6);
xlim([-2 6])
legend('(x*h1)*h2', 'x*(h1*h2)');
title('Associative Property of Convolution');
axis([-8 10 -7 12])
grid on;
%%Distributive Property of Convolution
% x*h1 + x*h2 = x*(h1+h2)
figure(7);
delta=0.01;
t =-2:delta:6;
tt = -4:delta:12;
tx = -8:delta:16;
x = u(t)-u(t-1);
h1 = u(t)-2.*u(t-2)+u(t-3);
h2 = u(t+1)+u(t-1)-2*(t-2);
a = delta*conv(x, h1);
b = delta*conv(x, h2);
y1 = a+b;
plot(tt,y1,'LineWidth',4);
xlim([-2 6])
hold on;
c = h1+h2;
d = delta*conv(x, c);
plot(tt,d,'r:', 'LineWidth', 6);
xlim([-2 6])
legend('x*h1 + x*h2', 'x*(h1 + h2)');
title('Distributive Property of Convolution');
axis([-4 8 -6 8])
grid on;
